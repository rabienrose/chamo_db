// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map-resources/resource_info_map.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "map-resources/resource_info_map.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace resource_info {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* ResourceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceInfoMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceInfoMap_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_map_2dresources_2fresource_5finfo_5fmap_2eproto() {
  protobuf_AddDesc_map_2dresources_2fresource_5finfo_5fmap_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "map-resources/resource_info_map.proto");
  GOOGLE_CHECK(file != NULL);
  ResourceInfo_descriptor_ = file->message_type(0);
  static const int ResourceInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, folder_idx_),
  };
  ResourceInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceInfo_descriptor_,
      ResourceInfo::default_instance_,
      ResourceInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceInfo));
  ResourceInfoMap_descriptor_ = file->message_type(1);
  static const int ResourceInfoMap_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfoMap, resource_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfoMap, resource_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfoMap, resource_info_),
  };
  ResourceInfoMap_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceInfoMap_descriptor_,
      ResourceInfoMap::default_instance_,
      ResourceInfoMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfoMap, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceInfoMap, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceInfoMap));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_map_2dresources_2fresource_5finfo_5fmap_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceInfo_descriptor_, &ResourceInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceInfoMap_descriptor_, &ResourceInfoMap::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_map_2dresources_2fresource_5finfo_5fmap_2eproto() {
  delete ResourceInfo::default_instance_;
  delete ResourceInfo_reflection_;
  delete ResourceInfoMap::default_instance_;
  delete ResourceInfoMap_reflection_;
}

void protobuf_AddDesc_map_2dresources_2fresource_5finfo_5fmap_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::common::proto::protobuf_AddDesc_maplab_2dcommon_2fid_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n%map-resources/resource_info_map.proto\022"
    "\023resource_info.proto\032\026maplab-common/id.p"
    "roto\"\"\n\014ResourceInfo\022\022\n\nfolder_idx\030\001 \002(\005"
    "\"\211\001\n\017ResourceInfoMap\022\025\n\rresource_type\030\001 "
    "\003(\r\022%\n\013resource_id\030\002 \003(\0132\020.common.proto."
    "Id\0228\n\rresource_info\030\003 \003(\0132!.resource_inf"
    "o.proto.ResourceInfo", 260);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "map-resources/resource_info_map.proto", &protobuf_RegisterTypes);
  ResourceInfo::default_instance_ = new ResourceInfo();
  ResourceInfoMap::default_instance_ = new ResourceInfoMap();
  ResourceInfo::default_instance_->InitAsDefaultInstance();
  ResourceInfoMap::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_map_2dresources_2fresource_5finfo_5fmap_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_map_2dresources_2fresource_5finfo_5fmap_2eproto {
  StaticDescriptorInitializer_map_2dresources_2fresource_5finfo_5fmap_2eproto() {
    protobuf_AddDesc_map_2dresources_2fresource_5finfo_5fmap_2eproto();
  }
} static_descriptor_initializer_map_2dresources_2fresource_5finfo_5fmap_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ResourceInfo::kFolderIdxFieldNumber;
#endif  // !_MSC_VER

ResourceInfo::ResourceInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:resource_info.proto.ResourceInfo)
}

void ResourceInfo::InitAsDefaultInstance() {
}

ResourceInfo::ResourceInfo(const ResourceInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:resource_info.proto.ResourceInfo)
}

void ResourceInfo::SharedCtor() {
  _cached_size_ = 0;
  folder_idx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceInfo::~ResourceInfo() {
  // @@protoc_insertion_point(destructor:resource_info.proto.ResourceInfo)
  SharedDtor();
}

void ResourceInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceInfo_descriptor_;
}

const ResourceInfo& ResourceInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2dresources_2fresource_5finfo_5fmap_2eproto();
  return *default_instance_;
}

ResourceInfo* ResourceInfo::default_instance_ = NULL;

ResourceInfo* ResourceInfo::New() const {
  return new ResourceInfo;
}

void ResourceInfo::Clear() {
  folder_idx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:resource_info.proto.ResourceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 folder_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &folder_idx_)));
          set_has_folder_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:resource_info.proto.ResourceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:resource_info.proto.ResourceInfo)
  return false;
#undef DO_
}

void ResourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:resource_info.proto.ResourceInfo)
  // required int32 folder_idx = 1;
  if (has_folder_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->folder_idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:resource_info.proto.ResourceInfo)
}

::google::protobuf::uint8* ResourceInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource_info.proto.ResourceInfo)
  // required int32 folder_idx = 1;
  if (has_folder_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->folder_idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource_info.proto.ResourceInfo)
  return target;
}

int ResourceInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 folder_idx = 1;
    if (has_folder_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->folder_idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceInfo::MergeFrom(const ResourceInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_folder_idx()) {
      set_folder_idx(from.folder_idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceInfo::CopyFrom(const ResourceInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResourceInfo::Swap(ResourceInfo* other) {
  if (other != this) {
    std::swap(folder_idx_, other->folder_idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceInfo_descriptor_;
  metadata.reflection = ResourceInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceInfoMap::kResourceTypeFieldNumber;
const int ResourceInfoMap::kResourceIdFieldNumber;
const int ResourceInfoMap::kResourceInfoFieldNumber;
#endif  // !_MSC_VER

ResourceInfoMap::ResourceInfoMap()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:resource_info.proto.ResourceInfoMap)
}

void ResourceInfoMap::InitAsDefaultInstance() {
}

ResourceInfoMap::ResourceInfoMap(const ResourceInfoMap& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:resource_info.proto.ResourceInfoMap)
}

void ResourceInfoMap::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceInfoMap::~ResourceInfoMap() {
  // @@protoc_insertion_point(destructor:resource_info.proto.ResourceInfoMap)
  SharedDtor();
}

void ResourceInfoMap::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceInfoMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceInfoMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceInfoMap_descriptor_;
}

const ResourceInfoMap& ResourceInfoMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_map_2dresources_2fresource_5finfo_5fmap_2eproto();
  return *default_instance_;
}

ResourceInfoMap* ResourceInfoMap::default_instance_ = NULL;

ResourceInfoMap* ResourceInfoMap::New() const {
  return new ResourceInfoMap;
}

void ResourceInfoMap::Clear() {
  resource_type_.Clear();
  resource_id_.Clear();
  resource_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceInfoMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:resource_info.proto.ResourceInfoMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 resource_type = 1;
      case 1: {
        if (tag == 8) {
         parse_resource_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_resource_type())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_resource_type())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_resource_type;
        if (input->ExpectTag(18)) goto parse_resource_id;
        break;
      }

      // repeated .common.proto.Id resource_id = 2;
      case 2: {
        if (tag == 18) {
         parse_resource_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resource_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resource_id;
        if (input->ExpectTag(26)) goto parse_resource_info;
        break;
      }

      // repeated .resource_info.proto.ResourceInfo resource_info = 3;
      case 3: {
        if (tag == 26) {
         parse_resource_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resource_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_resource_info;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:resource_info.proto.ResourceInfoMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:resource_info.proto.ResourceInfoMap)
  return false;
#undef DO_
}

void ResourceInfoMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:resource_info.proto.ResourceInfoMap)
  // repeated uint32 resource_type = 1;
  for (int i = 0; i < this->resource_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->resource_type(i), output);
  }

  // repeated .common.proto.Id resource_id = 2;
  for (int i = 0; i < this->resource_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resource_id(i), output);
  }

  // repeated .resource_info.proto.ResourceInfo resource_info = 3;
  for (int i = 0; i < this->resource_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->resource_info(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:resource_info.proto.ResourceInfoMap)
}

::google::protobuf::uint8* ResourceInfoMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:resource_info.proto.ResourceInfoMap)
  // repeated uint32 resource_type = 1;
  for (int i = 0; i < this->resource_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->resource_type(i), target);
  }

  // repeated .common.proto.Id resource_id = 2;
  for (int i = 0; i < this->resource_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resource_id(i), target);
  }

  // repeated .resource_info.proto.ResourceInfo resource_info = 3;
  for (int i = 0; i < this->resource_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->resource_info(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:resource_info.proto.ResourceInfoMap)
  return target;
}

int ResourceInfoMap::ByteSize() const {
  int total_size = 0;

  // repeated uint32 resource_type = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->resource_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->resource_type(i));
    }
    total_size += 1 * this->resource_type_size() + data_size;
  }

  // repeated .common.proto.Id resource_id = 2;
  total_size += 1 * this->resource_id_size();
  for (int i = 0; i < this->resource_id_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resource_id(i));
  }

  // repeated .resource_info.proto.ResourceInfo resource_info = 3;
  total_size += 1 * this->resource_info_size();
  for (int i = 0; i < this->resource_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resource_info(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceInfoMap::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceInfoMap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceInfoMap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceInfoMap::MergeFrom(const ResourceInfoMap& from) {
  GOOGLE_CHECK_NE(&from, this);
  resource_type_.MergeFrom(from.resource_type_);
  resource_id_.MergeFrom(from.resource_id_);
  resource_info_.MergeFrom(from.resource_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceInfoMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceInfoMap::CopyFrom(const ResourceInfoMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceInfoMap::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->resource_info())) return false;
  return true;
}

void ResourceInfoMap::Swap(ResourceInfoMap* other) {
  if (other != this) {
    resource_type_.Swap(&other->resource_type_);
    resource_id_.Swap(&other->resource_id_);
    resource_info_.Swap(&other->resource_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceInfoMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceInfoMap_descriptor_;
  metadata.reflection = ResourceInfoMap_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace resource_info

// @@protoc_insertion_point(global_scope)
