// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inverted-multi-index/inverted_multi_index.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "inverted-multi-index/inverted_multi_index.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace loop_closure {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* InvertedFile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvertedFile_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvertedMultiIndex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvertedMultiIndex_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvertedMultiIndex_WordIndexMapEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvertedMultiIndex_WordIndexMapEntry_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto() {
  protobuf_AddDesc_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "inverted-multi-index/inverted_multi_index.proto");
  GOOGLE_CHECK(file != NULL);
  InvertedFile_descriptor_ = file->message_type(0);
  static const int InvertedFile_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedFile, descriptors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedFile, indices_),
  };
  InvertedFile_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvertedFile_descriptor_,
      InvertedFile::default_instance_,
      InvertedFile_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedFile, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedFile, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvertedFile));
  InvertedMultiIndex_descriptor_ = file->message_type(1);
  static const int InvertedMultiIndex_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex, inverted_files_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex, max_db_descriptor_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex, word_index_map_),
  };
  InvertedMultiIndex_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvertedMultiIndex_descriptor_,
      InvertedMultiIndex::default_instance_,
      InvertedMultiIndex_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvertedMultiIndex));
  InvertedMultiIndex_WordIndexMapEntry_descriptor_ = InvertedMultiIndex_descriptor_->nested_type(0);
  static const int InvertedMultiIndex_WordIndexMapEntry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex_WordIndexMapEntry, visual_word_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex_WordIndexMapEntry, inverted_file_index_),
  };
  InvertedMultiIndex_WordIndexMapEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvertedMultiIndex_WordIndexMapEntry_descriptor_,
      InvertedMultiIndex_WordIndexMapEntry::default_instance_,
      InvertedMultiIndex_WordIndexMapEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex_WordIndexMapEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvertedMultiIndex_WordIndexMapEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvertedMultiIndex_WordIndexMapEntry));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvertedFile_descriptor_, &InvertedFile::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvertedMultiIndex_descriptor_, &InvertedMultiIndex::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvertedMultiIndex_WordIndexMapEntry_descriptor_, &InvertedMultiIndex_WordIndexMapEntry::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto() {
  delete InvertedFile::default_instance_;
  delete InvertedFile_reflection_;
  delete InvertedMultiIndex::default_instance_;
  delete InvertedMultiIndex_reflection_;
  delete InvertedMultiIndex_WordIndexMapEntry::default_instance_;
  delete InvertedMultiIndex_WordIndexMapEntry_reflection_;
}

void protobuf_AddDesc_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::common::proto::protobuf_AddDesc_maplab_2dcommon_2feigen_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/inverted-multi-index/inverted_multi_in"
    "dex.proto\022\022loop_closure.proto\032\031maplab-co"
    "mmon/eigen.proto\"L\n\014InvertedFile\022+\n\013desc"
    "riptors\030\001 \001(\0132\026.common.proto.MatrixXf\022\017\n"
    "\007indices\030\002 \003(\005\"\216\002\n\022InvertedMultiIndex\0228\n"
    "\016inverted_files\030\001 \003(\0132 .loop_closure.pro"
    "to.InvertedFile\022\037\n\027max_db_descriptor_ind"
    "ex\030\002 \001(\005\022P\n\016word_index_map\030\003 \003(\01328.loop_"
    "closure.proto.InvertedMultiIndex.WordInd"
    "exMapEntry\032K\n\021WordIndexMapEntry\022\031\n\021visua"
    "l_word_index\030\001 \001(\005\022\033\n\023inverted_file_inde"
    "x\030\002 \001(\005", 447);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "inverted-multi-index/inverted_multi_index.proto", &protobuf_RegisterTypes);
  InvertedFile::default_instance_ = new InvertedFile();
  InvertedMultiIndex::default_instance_ = new InvertedMultiIndex();
  InvertedMultiIndex_WordIndexMapEntry::default_instance_ = new InvertedMultiIndex_WordIndexMapEntry();
  InvertedFile::default_instance_->InitAsDefaultInstance();
  InvertedMultiIndex::default_instance_->InitAsDefaultInstance();
  InvertedMultiIndex_WordIndexMapEntry::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto {
  StaticDescriptorInitializer_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto() {
    protobuf_AddDesc_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto();
  }
} static_descriptor_initializer_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int InvertedFile::kDescriptorsFieldNumber;
const int InvertedFile::kIndicesFieldNumber;
#endif  // !_MSC_VER

InvertedFile::InvertedFile()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:loop_closure.proto.InvertedFile)
}

void InvertedFile::InitAsDefaultInstance() {
  descriptors_ = const_cast< ::common::proto::MatrixXf*>(&::common::proto::MatrixXf::default_instance());
}

InvertedFile::InvertedFile(const InvertedFile& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:loop_closure.proto.InvertedFile)
}

void InvertedFile::SharedCtor() {
  _cached_size_ = 0;
  descriptors_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvertedFile::~InvertedFile() {
  // @@protoc_insertion_point(destructor:loop_closure.proto.InvertedFile)
  SharedDtor();
}

void InvertedFile::SharedDtor() {
  if (this != default_instance_) {
    delete descriptors_;
  }
}

void InvertedFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvertedFile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvertedFile_descriptor_;
}

const InvertedFile& InvertedFile::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto();
  return *default_instance_;
}

InvertedFile* InvertedFile::default_instance_ = NULL;

InvertedFile* InvertedFile::New() const {
  return new InvertedFile;
}

void InvertedFile::Clear() {
  if (has_descriptors()) {
    if (descriptors_ != NULL) descriptors_->::common::proto::MatrixXf::Clear();
  }
  indices_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvertedFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:loop_closure.proto.InvertedFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.proto.MatrixXf descriptors = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_descriptors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_indices;
        break;
      }

      // repeated int32 indices = 2;
      case 2: {
        if (tag == 16) {
         parse_indices:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_indices())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_indices())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_indices;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:loop_closure.proto.InvertedFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:loop_closure.proto.InvertedFile)
  return false;
#undef DO_
}

void InvertedFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:loop_closure.proto.InvertedFile)
  // optional .common.proto.MatrixXf descriptors = 1;
  if (has_descriptors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->descriptors(), output);
  }

  // repeated int32 indices = 2;
  for (int i = 0; i < this->indices_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->indices(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:loop_closure.proto.InvertedFile)
}

::google::protobuf::uint8* InvertedFile::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:loop_closure.proto.InvertedFile)
  // optional .common.proto.MatrixXf descriptors = 1;
  if (has_descriptors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->descriptors(), target);
  }

  // repeated int32 indices = 2;
  for (int i = 0; i < this->indices_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->indices(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:loop_closure.proto.InvertedFile)
  return target;
}

int InvertedFile::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .common.proto.MatrixXf descriptors = 1;
    if (has_descriptors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->descriptors());
    }

  }
  // repeated int32 indices = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->indices_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->indices(i));
    }
    total_size += 1 * this->indices_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvertedFile::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvertedFile* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvertedFile*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvertedFile::MergeFrom(const InvertedFile& from) {
  GOOGLE_CHECK_NE(&from, this);
  indices_.MergeFrom(from.indices_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_descriptors()) {
      mutable_descriptors()->::common::proto::MatrixXf::MergeFrom(from.descriptors());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvertedFile::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvertedFile::CopyFrom(const InvertedFile& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvertedFile::IsInitialized() const {

  return true;
}

void InvertedFile::Swap(InvertedFile* other) {
  if (other != this) {
    std::swap(descriptors_, other->descriptors_);
    indices_.Swap(&other->indices_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvertedFile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvertedFile_descriptor_;
  metadata.reflection = InvertedFile_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InvertedMultiIndex_WordIndexMapEntry::kVisualWordIndexFieldNumber;
const int InvertedMultiIndex_WordIndexMapEntry::kInvertedFileIndexFieldNumber;
#endif  // !_MSC_VER

InvertedMultiIndex_WordIndexMapEntry::InvertedMultiIndex_WordIndexMapEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
}

void InvertedMultiIndex_WordIndexMapEntry::InitAsDefaultInstance() {
}

InvertedMultiIndex_WordIndexMapEntry::InvertedMultiIndex_WordIndexMapEntry(const InvertedMultiIndex_WordIndexMapEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
}

void InvertedMultiIndex_WordIndexMapEntry::SharedCtor() {
  _cached_size_ = 0;
  visual_word_index_ = 0;
  inverted_file_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvertedMultiIndex_WordIndexMapEntry::~InvertedMultiIndex_WordIndexMapEntry() {
  // @@protoc_insertion_point(destructor:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
  SharedDtor();
}

void InvertedMultiIndex_WordIndexMapEntry::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InvertedMultiIndex_WordIndexMapEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvertedMultiIndex_WordIndexMapEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvertedMultiIndex_WordIndexMapEntry_descriptor_;
}

const InvertedMultiIndex_WordIndexMapEntry& InvertedMultiIndex_WordIndexMapEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto();
  return *default_instance_;
}

InvertedMultiIndex_WordIndexMapEntry* InvertedMultiIndex_WordIndexMapEntry::default_instance_ = NULL;

InvertedMultiIndex_WordIndexMapEntry* InvertedMultiIndex_WordIndexMapEntry::New() const {
  return new InvertedMultiIndex_WordIndexMapEntry;
}

void InvertedMultiIndex_WordIndexMapEntry::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<InvertedMultiIndex_WordIndexMapEntry*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(visual_word_index_, inverted_file_index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvertedMultiIndex_WordIndexMapEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 visual_word_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &visual_word_index_)));
          set_has_visual_word_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_inverted_file_index;
        break;
      }

      // optional int32 inverted_file_index = 2;
      case 2: {
        if (tag == 16) {
         parse_inverted_file_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inverted_file_index_)));
          set_has_inverted_file_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
  return false;
#undef DO_
}

void InvertedMultiIndex_WordIndexMapEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
  // optional int32 visual_word_index = 1;
  if (has_visual_word_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->visual_word_index(), output);
  }

  // optional int32 inverted_file_index = 2;
  if (has_inverted_file_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->inverted_file_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
}

::google::protobuf::uint8* InvertedMultiIndex_WordIndexMapEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
  // optional int32 visual_word_index = 1;
  if (has_visual_word_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->visual_word_index(), target);
  }

  // optional int32 inverted_file_index = 2;
  if (has_inverted_file_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->inverted_file_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry)
  return target;
}

int InvertedMultiIndex_WordIndexMapEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 visual_word_index = 1;
    if (has_visual_word_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->visual_word_index());
    }

    // optional int32 inverted_file_index = 2;
    if (has_inverted_file_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inverted_file_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvertedMultiIndex_WordIndexMapEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvertedMultiIndex_WordIndexMapEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvertedMultiIndex_WordIndexMapEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvertedMultiIndex_WordIndexMapEntry::MergeFrom(const InvertedMultiIndex_WordIndexMapEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_visual_word_index()) {
      set_visual_word_index(from.visual_word_index());
    }
    if (from.has_inverted_file_index()) {
      set_inverted_file_index(from.inverted_file_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvertedMultiIndex_WordIndexMapEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvertedMultiIndex_WordIndexMapEntry::CopyFrom(const InvertedMultiIndex_WordIndexMapEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvertedMultiIndex_WordIndexMapEntry::IsInitialized() const {

  return true;
}

void InvertedMultiIndex_WordIndexMapEntry::Swap(InvertedMultiIndex_WordIndexMapEntry* other) {
  if (other != this) {
    std::swap(visual_word_index_, other->visual_word_index_);
    std::swap(inverted_file_index_, other->inverted_file_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvertedMultiIndex_WordIndexMapEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvertedMultiIndex_WordIndexMapEntry_descriptor_;
  metadata.reflection = InvertedMultiIndex_WordIndexMapEntry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int InvertedMultiIndex::kInvertedFilesFieldNumber;
const int InvertedMultiIndex::kMaxDbDescriptorIndexFieldNumber;
const int InvertedMultiIndex::kWordIndexMapFieldNumber;
#endif  // !_MSC_VER

InvertedMultiIndex::InvertedMultiIndex()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:loop_closure.proto.InvertedMultiIndex)
}

void InvertedMultiIndex::InitAsDefaultInstance() {
}

InvertedMultiIndex::InvertedMultiIndex(const InvertedMultiIndex& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:loop_closure.proto.InvertedMultiIndex)
}

void InvertedMultiIndex::SharedCtor() {
  _cached_size_ = 0;
  max_db_descriptor_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvertedMultiIndex::~InvertedMultiIndex() {
  // @@protoc_insertion_point(destructor:loop_closure.proto.InvertedMultiIndex)
  SharedDtor();
}

void InvertedMultiIndex::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InvertedMultiIndex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvertedMultiIndex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvertedMultiIndex_descriptor_;
}

const InvertedMultiIndex& InvertedMultiIndex::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inverted_2dmulti_2dindex_2finverted_5fmulti_5findex_2eproto();
  return *default_instance_;
}

InvertedMultiIndex* InvertedMultiIndex::default_instance_ = NULL;

InvertedMultiIndex* InvertedMultiIndex::New() const {
  return new InvertedMultiIndex;
}

void InvertedMultiIndex::Clear() {
  max_db_descriptor_index_ = 0;
  inverted_files_.Clear();
  word_index_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvertedMultiIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:loop_closure.proto.InvertedMultiIndex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .loop_closure.proto.InvertedFile inverted_files = 1;
      case 1: {
        if (tag == 10) {
         parse_inverted_files:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inverted_files()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_inverted_files;
        if (input->ExpectTag(16)) goto parse_max_db_descriptor_index;
        break;
      }

      // optional int32 max_db_descriptor_index = 2;
      case 2: {
        if (tag == 16) {
         parse_max_db_descriptor_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_db_descriptor_index_)));
          set_has_max_db_descriptor_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_word_index_map;
        break;
      }

      // repeated .loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry word_index_map = 3;
      case 3: {
        if (tag == 26) {
         parse_word_index_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_word_index_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_word_index_map;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:loop_closure.proto.InvertedMultiIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:loop_closure.proto.InvertedMultiIndex)
  return false;
#undef DO_
}

void InvertedMultiIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:loop_closure.proto.InvertedMultiIndex)
  // repeated .loop_closure.proto.InvertedFile inverted_files = 1;
  for (int i = 0; i < this->inverted_files_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->inverted_files(i), output);
  }

  // optional int32 max_db_descriptor_index = 2;
  if (has_max_db_descriptor_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_db_descriptor_index(), output);
  }

  // repeated .loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry word_index_map = 3;
  for (int i = 0; i < this->word_index_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->word_index_map(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:loop_closure.proto.InvertedMultiIndex)
}

::google::protobuf::uint8* InvertedMultiIndex::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:loop_closure.proto.InvertedMultiIndex)
  // repeated .loop_closure.proto.InvertedFile inverted_files = 1;
  for (int i = 0; i < this->inverted_files_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->inverted_files(i), target);
  }

  // optional int32 max_db_descriptor_index = 2;
  if (has_max_db_descriptor_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_db_descriptor_index(), target);
  }

  // repeated .loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry word_index_map = 3;
  for (int i = 0; i < this->word_index_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->word_index_map(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:loop_closure.proto.InvertedMultiIndex)
  return target;
}

int InvertedMultiIndex::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 max_db_descriptor_index = 2;
    if (has_max_db_descriptor_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_db_descriptor_index());
    }

  }
  // repeated .loop_closure.proto.InvertedFile inverted_files = 1;
  total_size += 1 * this->inverted_files_size();
  for (int i = 0; i < this->inverted_files_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inverted_files(i));
  }

  // repeated .loop_closure.proto.InvertedMultiIndex.WordIndexMapEntry word_index_map = 3;
  total_size += 1 * this->word_index_map_size();
  for (int i = 0; i < this->word_index_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->word_index_map(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvertedMultiIndex::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvertedMultiIndex* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvertedMultiIndex*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvertedMultiIndex::MergeFrom(const InvertedMultiIndex& from) {
  GOOGLE_CHECK_NE(&from, this);
  inverted_files_.MergeFrom(from.inverted_files_);
  word_index_map_.MergeFrom(from.word_index_map_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_max_db_descriptor_index()) {
      set_max_db_descriptor_index(from.max_db_descriptor_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvertedMultiIndex::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvertedMultiIndex::CopyFrom(const InvertedMultiIndex& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvertedMultiIndex::IsInitialized() const {

  return true;
}

void InvertedMultiIndex::Swap(InvertedMultiIndex* other) {
  if (other != this) {
    inverted_files_.Swap(&other->inverted_files_);
    std::swap(max_db_descriptor_index_, other->max_db_descriptor_index_);
    word_index_map_.Swap(&other->word_index_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvertedMultiIndex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvertedMultiIndex_descriptor_;
  metadata.reflection = InvertedMultiIndex_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace loop_closure

// @@protoc_insertion_point(global_scope)
