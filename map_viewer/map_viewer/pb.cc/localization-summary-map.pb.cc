// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: localization-summary-map/localization-summary-map.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "localization-summary-map/localization-summary-map.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace summary_map {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* UncompressedLocalizationSummaryMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UncompressedLocalizationSummaryMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* LocalizationSummaryMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LocalizationSummaryMap_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto() {
  protobuf_AddDesc_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "localization-summary-map/localization-summary-map.proto");
  GOOGLE_CHECK(file != NULL);
  UncompressedLocalizationSummaryMap_descriptor_ = file->message_type(0);
  static const int UncompressedLocalizationSummaryMap_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UncompressedLocalizationSummaryMap, descriptors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UncompressedLocalizationSummaryMap, g_observer_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UncompressedLocalizationSummaryMap, observer_indices_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UncompressedLocalizationSummaryMap, observation_to_landmark_index_),
  };
  UncompressedLocalizationSummaryMap_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UncompressedLocalizationSummaryMap_descriptor_,
      UncompressedLocalizationSummaryMap::default_instance_,
      UncompressedLocalizationSummaryMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UncompressedLocalizationSummaryMap, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UncompressedLocalizationSummaryMap, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UncompressedLocalizationSummaryMap));
  LocalizationSummaryMap_descriptor_ = file->message_type(1);
  static const int LocalizationSummaryMap_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizationSummaryMap, g_landmark_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizationSummaryMap, uncompressed_map_),
  };
  LocalizationSummaryMap_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LocalizationSummaryMap_descriptor_,
      LocalizationSummaryMap::default_instance_,
      LocalizationSummaryMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizationSummaryMap, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizationSummaryMap, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LocalizationSummaryMap));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UncompressedLocalizationSummaryMap_descriptor_, &UncompressedLocalizationSummaryMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LocalizationSummaryMap_descriptor_, &LocalizationSummaryMap::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto() {
  delete UncompressedLocalizationSummaryMap::default_instance_;
  delete UncompressedLocalizationSummaryMap_reflection_;
  delete LocalizationSummaryMap::default_instance_;
  delete LocalizationSummaryMap_reflection_;
}

void protobuf_AddDesc_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::common::proto::protobuf_AddDesc_maplab_2dcommon_2feigen_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n7localization-summary-map/localization-"
    "summary-map.proto\022\021summary_map.proto\032\031ma"
    "plab-common/eigen.proto\"\257\001\n\"Uncompressed"
    "LocalizationSummaryMap\022+\n\013descriptors\030\001 "
    "\001(\0132\026.common.proto.MatrixXf\022\033\n\023G_observe"
    "r_position\030\002 \003(\002\022\030\n\020observer_indices\030\003 \003"
    "(\r\022%\n\035observation_to_landmark_index\030\004 \003("
    "\r\"\206\001\n\026LocalizationSummaryMap\022\033\n\023G_landma"
    "rk_position\030\001 \003(\002\022O\n\020uncompressed_map\030\002 "
    "\001(\01325.summary_map.proto.UncompressedLoca"
    "lizationSummaryMap", 418);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "localization-summary-map/localization-summary-map.proto", &protobuf_RegisterTypes);
  UncompressedLocalizationSummaryMap::default_instance_ = new UncompressedLocalizationSummaryMap();
  LocalizationSummaryMap::default_instance_ = new LocalizationSummaryMap();
  UncompressedLocalizationSummaryMap::default_instance_->InitAsDefaultInstance();
  LocalizationSummaryMap::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto {
  StaticDescriptorInitializer_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto() {
    protobuf_AddDesc_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto();
  }
} static_descriptor_initializer_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UncompressedLocalizationSummaryMap::kDescriptorsFieldNumber;
const int UncompressedLocalizationSummaryMap::kGObserverPositionFieldNumber;
const int UncompressedLocalizationSummaryMap::kObserverIndicesFieldNumber;
const int UncompressedLocalizationSummaryMap::kObservationToLandmarkIndexFieldNumber;
#endif  // !_MSC_VER

UncompressedLocalizationSummaryMap::UncompressedLocalizationSummaryMap()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:summary_map.proto.UncompressedLocalizationSummaryMap)
}

void UncompressedLocalizationSummaryMap::InitAsDefaultInstance() {
  descriptors_ = const_cast< ::common::proto::MatrixXf*>(&::common::proto::MatrixXf::default_instance());
}

UncompressedLocalizationSummaryMap::UncompressedLocalizationSummaryMap(const UncompressedLocalizationSummaryMap& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:summary_map.proto.UncompressedLocalizationSummaryMap)
}

void UncompressedLocalizationSummaryMap::SharedCtor() {
  _cached_size_ = 0;
  descriptors_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UncompressedLocalizationSummaryMap::~UncompressedLocalizationSummaryMap() {
  // @@protoc_insertion_point(destructor:summary_map.proto.UncompressedLocalizationSummaryMap)
  SharedDtor();
}

void UncompressedLocalizationSummaryMap::SharedDtor() {
  if (this != default_instance_) {
    delete descriptors_;
  }
}

void UncompressedLocalizationSummaryMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UncompressedLocalizationSummaryMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UncompressedLocalizationSummaryMap_descriptor_;
}

const UncompressedLocalizationSummaryMap& UncompressedLocalizationSummaryMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto();
  return *default_instance_;
}

UncompressedLocalizationSummaryMap* UncompressedLocalizationSummaryMap::default_instance_ = NULL;

UncompressedLocalizationSummaryMap* UncompressedLocalizationSummaryMap::New() const {
  return new UncompressedLocalizationSummaryMap;
}

void UncompressedLocalizationSummaryMap::Clear() {
  if (has_descriptors()) {
    if (descriptors_ != NULL) descriptors_->::common::proto::MatrixXf::Clear();
  }
  g_observer_position_.Clear();
  observer_indices_.Clear();
  observation_to_landmark_index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UncompressedLocalizationSummaryMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:summary_map.proto.UncompressedLocalizationSummaryMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .common.proto.MatrixXf descriptors = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_descriptors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_G_observer_position;
        break;
      }

      // repeated float G_observer_position = 2;
      case 2: {
        if (tag == 21) {
         parse_G_observer_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21, input, this->mutable_g_observer_position())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_g_observer_position())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_G_observer_position;
        if (input->ExpectTag(24)) goto parse_observer_indices;
        break;
      }

      // repeated uint32 observer_indices = 3;
      case 3: {
        if (tag == 24) {
         parse_observer_indices:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_observer_indices())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_observer_indices())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_observer_indices;
        if (input->ExpectTag(32)) goto parse_observation_to_landmark_index;
        break;
      }

      // repeated uint32 observation_to_landmark_index = 4;
      case 4: {
        if (tag == 32) {
         parse_observation_to_landmark_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_observation_to_landmark_index())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_observation_to_landmark_index())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_observation_to_landmark_index;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:summary_map.proto.UncompressedLocalizationSummaryMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:summary_map.proto.UncompressedLocalizationSummaryMap)
  return false;
#undef DO_
}

void UncompressedLocalizationSummaryMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:summary_map.proto.UncompressedLocalizationSummaryMap)
  // optional .common.proto.MatrixXf descriptors = 1;
  if (has_descriptors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->descriptors(), output);
  }

  // repeated float G_observer_position = 2;
  for (int i = 0; i < this->g_observer_position_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->g_observer_position(i), output);
  }

  // repeated uint32 observer_indices = 3;
  for (int i = 0; i < this->observer_indices_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->observer_indices(i), output);
  }

  // repeated uint32 observation_to_landmark_index = 4;
  for (int i = 0; i < this->observation_to_landmark_index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->observation_to_landmark_index(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:summary_map.proto.UncompressedLocalizationSummaryMap)
}

::google::protobuf::uint8* UncompressedLocalizationSummaryMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:summary_map.proto.UncompressedLocalizationSummaryMap)
  // optional .common.proto.MatrixXf descriptors = 1;
  if (has_descriptors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->descriptors(), target);
  }

  // repeated float G_observer_position = 2;
  for (int i = 0; i < this->g_observer_position_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(2, this->g_observer_position(i), target);
  }

  // repeated uint32 observer_indices = 3;
  for (int i = 0; i < this->observer_indices_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->observer_indices(i), target);
  }

  // repeated uint32 observation_to_landmark_index = 4;
  for (int i = 0; i < this->observation_to_landmark_index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->observation_to_landmark_index(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:summary_map.proto.UncompressedLocalizationSummaryMap)
  return target;
}

int UncompressedLocalizationSummaryMap::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .common.proto.MatrixXf descriptors = 1;
    if (has_descriptors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->descriptors());
    }

  }
  // repeated float G_observer_position = 2;
  {
    int data_size = 0;
    data_size = 4 * this->g_observer_position_size();
    total_size += 1 * this->g_observer_position_size() + data_size;
  }

  // repeated uint32 observer_indices = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->observer_indices_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->observer_indices(i));
    }
    total_size += 1 * this->observer_indices_size() + data_size;
  }

  // repeated uint32 observation_to_landmark_index = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->observation_to_landmark_index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->observation_to_landmark_index(i));
    }
    total_size += 1 * this->observation_to_landmark_index_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UncompressedLocalizationSummaryMap::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UncompressedLocalizationSummaryMap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UncompressedLocalizationSummaryMap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UncompressedLocalizationSummaryMap::MergeFrom(const UncompressedLocalizationSummaryMap& from) {
  GOOGLE_CHECK_NE(&from, this);
  g_observer_position_.MergeFrom(from.g_observer_position_);
  observer_indices_.MergeFrom(from.observer_indices_);
  observation_to_landmark_index_.MergeFrom(from.observation_to_landmark_index_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_descriptors()) {
      mutable_descriptors()->::common::proto::MatrixXf::MergeFrom(from.descriptors());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UncompressedLocalizationSummaryMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UncompressedLocalizationSummaryMap::CopyFrom(const UncompressedLocalizationSummaryMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UncompressedLocalizationSummaryMap::IsInitialized() const {

  return true;
}

void UncompressedLocalizationSummaryMap::Swap(UncompressedLocalizationSummaryMap* other) {
  if (other != this) {
    std::swap(descriptors_, other->descriptors_);
    g_observer_position_.Swap(&other->g_observer_position_);
    observer_indices_.Swap(&other->observer_indices_);
    observation_to_landmark_index_.Swap(&other->observation_to_landmark_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UncompressedLocalizationSummaryMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UncompressedLocalizationSummaryMap_descriptor_;
  metadata.reflection = UncompressedLocalizationSummaryMap_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LocalizationSummaryMap::kGLandmarkPositionFieldNumber;
const int LocalizationSummaryMap::kUncompressedMapFieldNumber;
#endif  // !_MSC_VER

LocalizationSummaryMap::LocalizationSummaryMap()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:summary_map.proto.LocalizationSummaryMap)
}

void LocalizationSummaryMap::InitAsDefaultInstance() {
  uncompressed_map_ = const_cast< ::summary_map::proto::UncompressedLocalizationSummaryMap*>(&::summary_map::proto::UncompressedLocalizationSummaryMap::default_instance());
}

LocalizationSummaryMap::LocalizationSummaryMap(const LocalizationSummaryMap& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:summary_map.proto.LocalizationSummaryMap)
}

void LocalizationSummaryMap::SharedCtor() {
  _cached_size_ = 0;
  uncompressed_map_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LocalizationSummaryMap::~LocalizationSummaryMap() {
  // @@protoc_insertion_point(destructor:summary_map.proto.LocalizationSummaryMap)
  SharedDtor();
}

void LocalizationSummaryMap::SharedDtor() {
  if (this != default_instance_) {
    delete uncompressed_map_;
  }
}

void LocalizationSummaryMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalizationSummaryMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LocalizationSummaryMap_descriptor_;
}

const LocalizationSummaryMap& LocalizationSummaryMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_localization_2dsummary_2dmap_2flocalization_2dsummary_2dmap_2eproto();
  return *default_instance_;
}

LocalizationSummaryMap* LocalizationSummaryMap::default_instance_ = NULL;

LocalizationSummaryMap* LocalizationSummaryMap::New() const {
  return new LocalizationSummaryMap;
}

void LocalizationSummaryMap::Clear() {
  if (has_uncompressed_map()) {
    if (uncompressed_map_ != NULL) uncompressed_map_->::summary_map::proto::UncompressedLocalizationSummaryMap::Clear();
  }
  g_landmark_position_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LocalizationSummaryMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:summary_map.proto.LocalizationSummaryMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float G_landmark_position = 1;
      case 1: {
        if (tag == 13) {
         parse_G_landmark_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_g_landmark_position())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_g_landmark_position())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_G_landmark_position;
        if (input->ExpectTag(18)) goto parse_uncompressed_map;
        break;
      }

      // optional .summary_map.proto.UncompressedLocalizationSummaryMap uncompressed_map = 2;
      case 2: {
        if (tag == 18) {
         parse_uncompressed_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uncompressed_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:summary_map.proto.LocalizationSummaryMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:summary_map.proto.LocalizationSummaryMap)
  return false;
#undef DO_
}

void LocalizationSummaryMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:summary_map.proto.LocalizationSummaryMap)
  // repeated float G_landmark_position = 1;
  for (int i = 0; i < this->g_landmark_position_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->g_landmark_position(i), output);
  }

  // optional .summary_map.proto.UncompressedLocalizationSummaryMap uncompressed_map = 2;
  if (has_uncompressed_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->uncompressed_map(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:summary_map.proto.LocalizationSummaryMap)
}

::google::protobuf::uint8* LocalizationSummaryMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:summary_map.proto.LocalizationSummaryMap)
  // repeated float G_landmark_position = 1;
  for (int i = 0; i < this->g_landmark_position_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->g_landmark_position(i), target);
  }

  // optional .summary_map.proto.UncompressedLocalizationSummaryMap uncompressed_map = 2;
  if (has_uncompressed_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->uncompressed_map(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:summary_map.proto.LocalizationSummaryMap)
  return target;
}

int LocalizationSummaryMap::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .summary_map.proto.UncompressedLocalizationSummaryMap uncompressed_map = 2;
    if (has_uncompressed_map()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uncompressed_map());
    }

  }
  // repeated float G_landmark_position = 1;
  {
    int data_size = 0;
    data_size = 4 * this->g_landmark_position_size();
    total_size += 1 * this->g_landmark_position_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalizationSummaryMap::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LocalizationSummaryMap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LocalizationSummaryMap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LocalizationSummaryMap::MergeFrom(const LocalizationSummaryMap& from) {
  GOOGLE_CHECK_NE(&from, this);
  g_landmark_position_.MergeFrom(from.g_landmark_position_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_uncompressed_map()) {
      mutable_uncompressed_map()->::summary_map::proto::UncompressedLocalizationSummaryMap::MergeFrom(from.uncompressed_map());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LocalizationSummaryMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalizationSummaryMap::CopyFrom(const LocalizationSummaryMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalizationSummaryMap::IsInitialized() const {

  return true;
}

void LocalizationSummaryMap::Swap(LocalizationSummaryMap* other) {
  if (other != this) {
    g_landmark_position_.Swap(&other->g_landmark_position_);
    std::swap(uncompressed_map_, other->uncompressed_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LocalizationSummaryMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LocalizationSummaryMap_descriptor_;
  metadata.reflection = LocalizationSummaryMap_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace summary_map

// @@protoc_insertion_point(global_scope)
